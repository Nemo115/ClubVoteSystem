{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luden\\\\OneDrive\\\\Documents\\\\University\\\\cissa\\\\Codebrew\\\\ClubVoteSystem\\\\frontend\\\\vote-system\\\\src\\\\Pages\\\\Voting.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Voting() {\n  _s();\n  // Will be pulled from API when its up\n  const nominees = [{\n    name: 'Nominee 1',\n    position: 'President'\n  }, {\n    name: 'Nominee 2',\n    position: 'Treasurer'\n  }, {\n    name: 'Nominee 3.14159',\n    position: 'Secretary'\n  }, {\n    name: 'Nominee 4.5',\n    position: 'President'\n  }];\n  var positions = [];\n  for (let i = 0; i < nominees.length; i++) {\n    if (!positions.includes(nominees[i].position)) {\n      positions.push(nominees[i].position);\n    }\n  }\n  const [checks, setChecks] = useState([]);\n  function handleCheckboxChange(position, index) {\n    setChecks(prevState => ({\n      ...prevState,\n      [position]: index\n    }));\n  }\n  function submit() {\n    var selected = [];\n    Object.values(checks).forEach(value => {\n      selected.push(nominees[value]);\n    });\n    console.log(selected);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Voting Process\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), positions.map((position, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: nominees.map((nominee, index) => nominee.position === position && /*#__PURE__*/_jsxDEV(\"li\", {\n          style: listStyle,\n          children: [nominee.name, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checks[position] === index,\n            onChange: () => handleCheckboxChange(position, index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 58\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      onClick: submit,\n      Submit: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Voting, \"TZHbkaEpyKR9CIzVWSrv1ywYfuQ=\");\n_c = Voting;\nconst listStyle = {\n  listStyle: \"none\"\n};\nvar _c;\n$RefreshReg$(_c, \"Voting\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Voting","_s","nominees","name","position","positions","i","length","includes","push","checks","setChecks","handleCheckboxChange","index","prevState","submit","selected","Object","values","forEach","value","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","nominee","style","listStyle","type","checked","onChange","onClick","Submit","_c","$RefreshReg$"],"sources":["C:/Users/luden/OneDrive/Documents/University/cissa/Codebrew/ClubVoteSystem/frontend/vote-system/src/Pages/Voting.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport '../constants'\r\n\r\nexport default function Voting() {\r\n    // Will be pulled from API when its up\r\n    const nominees = [\r\n        {\r\n            name:'Nominee 1',\r\n            position: 'President'\r\n        },\r\n        {\r\n            name:'Nominee 2',\r\n            position: 'Treasurer'\r\n        },\r\n        {\r\n            name: 'Nominee 3.14159',\r\n            position: 'Secretary'\r\n        }, \r\n        {\r\n            name: 'Nominee 4.5',\r\n            position: 'President'\r\n        }\r\n    ]\r\n\r\n    var positions = []\r\n    for (let i=0;i<nominees.length;i++) {\r\n        if (!positions.includes(nominees[i].position)) {\r\n            positions.push(nominees[i].position);\r\n        }\r\n    }\r\n\r\n    const [checks, setChecks] = useState([]);\r\n\r\n    function handleCheckboxChange(position, index) {\r\n        setChecks(prevState => ({\r\n            ...prevState, \r\n            [position]: index\r\n        }));\r\n    }\r\n\r\n    function submit() {\r\n        var selected = []\r\n        Object.values(checks).forEach(value => {\r\n            selected.push(nominees[value]);\r\n        })\r\n        console.log(selected)\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h2>Voting Process</h2>\r\n        {positions.map((position, index) => (\r\n            <div>\r\n                <h1>{position}</h1>\r\n                <ul key={index}>\r\n                    {nominees.map((nominee, index) => (\r\n                        nominee.position === position && <li style={listStyle} key={index}>\r\n                            {nominee.name}\r\n                            <input type=\"checkbox\" checked={checks[position] === index}onChange={() => handleCheckboxChange(position, index)}/>\r\n                            </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        ))}\r\n        <input type=\"submit\" onClick={submit}Submit/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst listStyle = {\r\n    listStyle: \"none\"\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B;EACA,MAAMC,QAAQ,GAAG,CACb;IACIC,IAAI,EAAC,WAAW;IAChBC,QAAQ,EAAE;EACd,CAAC,EACD;IACID,IAAI,EAAC,WAAW;IAChBC,QAAQ,EAAE;EACd,CAAC,EACD;IACID,IAAI,EAAE,iBAAiB;IACvBC,QAAQ,EAAE;EACd,CAAC,EACD;IACID,IAAI,EAAE,aAAa;IACnBC,QAAQ,EAAE;EACd,CAAC,CACJ;EAED,IAAIC,SAAS,GAAG,EAAE;EAClB,KAAK,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACJ,QAAQ,CAACK,MAAM,EAACD,CAAC,EAAE,EAAE;IAChC,IAAI,CAACD,SAAS,CAACG,QAAQ,CAACN,QAAQ,CAACI,CAAC,CAAC,CAACF,QAAQ,CAAC,EAAE;MAC3CC,SAAS,CAACI,IAAI,CAACP,QAAQ,CAACI,CAAC,CAAC,CAACF,QAAQ,CAAC;IACxC;EACJ;EAEA,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExC,SAASe,oBAAoBA,CAACR,QAAQ,EAAES,KAAK,EAAE;IAC3CF,SAAS,CAACG,SAAS,KAAK;MACpB,GAAGA,SAAS;MACZ,CAACV,QAAQ,GAAGS;IAChB,CAAC,CAAC,CAAC;EACP;EAEA,SAASE,MAAMA,CAAA,EAAG;IACd,IAAIC,QAAQ,GAAG,EAAE;IACjBC,MAAM,CAACC,MAAM,CAACR,MAAM,CAAC,CAACS,OAAO,CAACC,KAAK,IAAI;MACnCJ,QAAQ,CAACP,IAAI,CAACP,QAAQ,CAACkB,KAAK,CAAC,CAAC;IAClC,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;EACzB;EAEF,oBACEjB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBtB,SAAS,CAACuB,GAAG,CAAC,CAACxB,QAAQ,EAAES,KAAK,kBAC3Bd,OAAA;MAAAwB,QAAA,gBACIxB,OAAA;QAAAwB,QAAA,EAAKnB;MAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnB5B,OAAA;QAAAwB,QAAA,EACKrB,QAAQ,CAAC0B,GAAG,CAAC,CAACC,OAAO,EAAEhB,KAAK,KACzBgB,OAAO,CAACzB,QAAQ,KAAKA,QAAQ,iBAAIL,OAAA;UAAI+B,KAAK,EAAEC,SAAU;UAAAR,QAAA,GACjDM,OAAO,CAAC1B,IAAI,eACbJ,OAAA;YAAOiC,IAAI,EAAC,UAAU;YAACC,OAAO,EAAEvB,MAAM,CAACN,QAAQ,CAAC,KAAKS,KAAM;YAAAqB,QAAQ,EAAEA,CAAA,KAAMtB,oBAAoB,CAACR,QAAQ,EAAES,KAAK;UAAE;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA,GAF3Dd,KAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGzD,CACX;MAAC,GANGd,KAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACR,CAAC,eACF5B,OAAA;MAAOiC,IAAI,EAAC,QAAQ;MAACG,OAAO,EAAEpB,MAAO;MAAAqB,MAAM;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAAC1B,EAAA,CAhEuBD,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AAkE9B,MAAM+B,SAAS,GAAG;EACdA,SAAS,EAAE;AACf,CAAC;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}